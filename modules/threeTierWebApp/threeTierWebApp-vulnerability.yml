Resources:
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC
    Metadata:
      aws:cdk:path: SrcStack/VPC/Resource
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.0.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PublicSubnet1
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet1/Subnet
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet1/RouteTable
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet1/RouteTableAssociation
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet1/DefaultRoute
  VPCPublicSubnet1EIP6AD938E8:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet1/EIP
  VPCPublicSubnet1NATGatewayE0556630:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet1EIP6AD938E8
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PublicSubnet1
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet1/NATGateway
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.64.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: true
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PublicSubnet2
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet2/Subnet
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet2/RouteTable
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet2/RouteTableAssociation
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
    DependsOn:
      - VPCVPCGW99B986DC
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet2/DefaultRoute
  VPCPublicSubnet2EIP4947BC00:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet2/EIP
  VPCPublicSubnet2NATGateway3C070193:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
          - VPCPublicSubnet2EIP4947BC00
          - AllocationId
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PublicSubnet2
    Metadata:
      aws:cdk:path: SrcStack/VPC/PublicSubnet2/NATGateway
  VPCPrivateSubnet1Subnet8BCA10E0:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.128.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PrivateSubnet1
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: SrcStack/VPC/PrivateSubnet1/Subnet
  VPCPrivateSubnet1RouteTableBE8A6027:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PrivateSubnet1
    Metadata:
      aws:cdk:path: SrcStack/VPC/PrivateSubnet1/RouteTable
  VPCPrivateSubnet1RouteTableAssociation347902D1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      SubnetId:
        Ref: VPCPrivateSubnet1Subnet8BCA10E0
    Metadata:
      aws:cdk:path: SrcStack/VPC/PrivateSubnet1/RouteTableAssociation
  VPCPrivateSubnet1DefaultRouteAE1D6490:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet1RouteTableBE8A6027
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet1NATGatewayE0556630
    Metadata:
      aws:cdk:path: SrcStack/VPC/PrivateSubnet1/DefaultRoute
  VPCPrivateSubnet2SubnetCFCDAA7A:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 10.0.192.0/18
      VpcId:
        Ref: VPCB9E5F0B4
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      MapPublicIpOnLaunch: false
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PrivateSubnet2
        - Key: aws-cdk:subnet-name
          Value: Private
        - Key: aws-cdk:subnet-type
          Value: Private
    Metadata:
      aws:cdk:path: SrcStack/VPC/PrivateSubnet2/Subnet
  VPCPrivateSubnet2RouteTable0A19E10E:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC/PrivateSubnet2
    Metadata:
      aws:cdk:path: SrcStack/VPC/PrivateSubnet2/RouteTable
  VPCPrivateSubnet2RouteTableAssociation0C73D413:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      SubnetId:
        Ref: VPCPrivateSubnet2SubnetCFCDAA7A
    Metadata:
      aws:cdk:path: SrcStack/VPC/PrivateSubnet2/RouteTableAssociation
  VPCPrivateSubnet2DefaultRouteF4F5CFD2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: VPCPrivateSubnet2RouteTable0A19E10E
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: VPCPublicSubnet2NATGateway3C070193
    Metadata:
      aws:cdk:path: SrcStack/VPC/PrivateSubnet2/DefaultRoute
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/VPC
    Metadata:
      aws:cdk:path: SrcStack/VPC/IGW
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPCB9E5F0B4
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
    Metadata:
      aws:cdk:path: SrcStack/VPC/VPCGW
  PublicS3BucketPublicS3BucketArc319353CADEE:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicReadWrite
      Tags:
        - Key: CreatedFor
          Value: ARC319
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SrcStack/PublicS3Bucket/PublicS3BucketArc319/Resource
  WebTieropenSg420E1C89:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open to the world
      GroupName: sgOpenToTheWorld
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:ALL TRAFFIC
          IpProtocol: "-1"
        - CidrIpv6: ::0/0
          Description: from ::0/0:ALL TRAFFIC
          IpProtocol: "-1"
      Tags:
        - Key: CreatedFor
          Value: ARC319
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: SrcStack/WebTier/openSg/Resource
  WebTierOverlyPermissiveEc2Role84FAF34F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                Fn::Join:
                  - ""
                  - - ec2.
                    - Ref: AWS::URLSuffix
        Version: "2012-10-17"
      RoleName: SrcStack/WebTier-MyEc2Role
    Metadata:
      aws:cdk:path: SrcStack/WebTier/OverlyPermissiveEc2Role/Resource
  WebTierOverlyPermissiveEc2RoleDefaultPolicy209859F8:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: "*"
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: WebTierOverlyPermissiveEc2RoleDefaultPolicy209859F8
      Roles:
        - Ref: WebTierOverlyPermissiveEc2Role84FAF34F
    Metadata:
      aws:cdk:path: SrcStack/WebTier/OverlyPermissiveEc2Role/DefaultPolicy/Resource
  WebTierASGInstanceSecurityGroupBA22A1C9:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SrcStack/WebTier/ASG/InstanceSecurityGroup
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: CreatedFor
          Value: ARC319
        - Key: Name
          Value: SrcStack/WebTier/ASG
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: SrcStack/WebTier/ASG/InstanceSecurityGroup/Resource
  WebTierASGInstanceSecurityGroupfromSrcStackWebTierLBSecurityGroupA13EC0C3803A52D8D5:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Load balancer to target
      FromPort: 80
      GroupId:
        Fn::GetAtt:
          - WebTierASGInstanceSecurityGroupBA22A1C9
          - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
          - WebTierLBSecurityGroup9DAA277F
          - GroupId
      ToPort: 80
    Metadata:
      aws:cdk:path: SrcStack/WebTier/ASG/InstanceSecurityGroup/from SrcStackWebTierLBSecurityGroupA13EC0C3:80
  WebTierASGInstanceProfile2CD35513:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - Ref: WebTierOverlyPermissiveEc2Role84FAF34F
    Metadata:
      aws:cdk:path: SrcStack/WebTier/ASG/InstanceProfile
  WebTierASGLaunchConfig1AB6B99C:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId:
        Ref: SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter
      InstanceType: t2.micro
      AssociatePublicIpAddress: true
      IamInstanceProfile:
        Ref: WebTierASGInstanceProfile2CD35513
      SecurityGroups:
        - Fn::GetAtt:
            - WebTierASGInstanceSecurityGroupBA22A1C9
            - GroupId
        - Fn::GetAtt:
            - WebTieropenSg420E1C89
            - GroupId
      UserData:
        Fn::Base64: "#!/bin/bash"
    DependsOn:
      - WebTierOverlyPermissiveEc2RoleDefaultPolicy209859F8
      - WebTierOverlyPermissiveEc2Role84FAF34F
    Metadata:
      aws:cdk:path: SrcStack/WebTier/ASG/LaunchConfig
  WebTierASGDE1B8DDD:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      MaxSize: "1"
      MinSize: "1"
      DesiredCapacity: "1"
      LaunchConfigurationName:
        Ref: WebTierASGLaunchConfig1AB6B99C
      Tags:
        - Key: CreatedFor
          PropagateAtLaunch: true
          Value: ARC319
        - Key: Name
          PropagateAtLaunch: true
          Value: SrcStack/WebTier/ASG
      TargetGroupARNs:
        - Ref: WebTierLBSrcStackWebTierListenerTargetGroup9C59CEE2
      VPCZoneIdentifier:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
    UpdatePolicy:
      AutoScalingScheduledAction:
        IgnoreUnmodifiedGroupSizeProperties: true
    Metadata:
      aws:cdk:path: SrcStack/WebTier/ASG/ASG
  WebTierASGScalingPolicyAModestLoadCDE1B5C9:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName:
        Ref: WebTierASGDE1B8DDD
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ALBRequestCountPerTarget
          ResourceLabel:
            Fn::Join:
              - ""
              - - Fn::Select:
                    - 1
                    - Fn::Split:
                        - /
                        - Ref: WebTierLBSrcStackWebTierListener21A1FF1D
                - /
                - Fn::Select:
                    - 2
                    - Fn::Split:
                        - /
                        - Ref: WebTierLBSrcStackWebTierListener21A1FF1D
                - /
                - Fn::Select:
                    - 3
                    - Fn::Split:
                        - /
                        - Ref: WebTierLBSrcStackWebTierListener21A1FF1D
                - /
                - Fn::GetAtt:
                    - WebTierLBSrcStackWebTierListenerTargetGroup9C59CEE2
                    - TargetGroupFullName
        TargetValue: 1
    DependsOn:
      - WebTierLBSrcStackWebTierListener21A1FF1D
      - WebTierLBSrcStackWebTierListenerTargetGroup9C59CEE2
    Metadata:
      aws:cdk:path: SrcStack/WebTier/ASG/ScalingPolicyAModestLoad/Resource
  WebTierLB0914A06C:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - Fn::GetAtt:
            - WebTierLBSecurityGroup9DAA277F
            - GroupId
      Subnets:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
      Tags:
        - Key: CreatedFor
          Value: ARC319
      Type: application
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
    Metadata:
      aws:cdk:path: SrcStack/WebTier/LB/Resource
  WebTierLBSecurityGroup9DAA277F:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB SrcStackWebTierLB8F3B733A
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      Tags:
        - Key: CreatedFor
          Value: ARC319
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: SrcStack/WebTier/LB/SecurityGroup/Resource
  WebTierLBSecurityGrouptoSrcStackWebTierASGInstanceSecurityGroup62B255B680D1DAB23E:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
          - WebTierLBSecurityGroup9DAA277F
          - GroupId
      IpProtocol: tcp
      Description: Load balancer to target
      DestinationSecurityGroupId:
        Fn::GetAtt:
          - WebTierASGInstanceSecurityGroupBA22A1C9
          - GroupId
      FromPort: 80
      ToPort: 80
    Metadata:
      aws:cdk:path: SrcStack/WebTier/LB/SecurityGroup/to SrcStackWebTierASGInstanceSecurityGroup62B255B6:80
  WebTierLBSrcStackWebTierListener21A1FF1D:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: WebTierLBSrcStackWebTierListenerTargetGroup9C59CEE2
          Type: forward
      LoadBalancerArn:
        Ref: WebTierLB0914A06C
      Port: 80
      Protocol: HTTP
    Metadata:
      aws:cdk:path: SrcStack/WebTier/LB/SrcStack--WebTier-Listener/Resource
  WebTierLBSrcStackWebTierListenerTargetGroup9C59CEE2:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: CreatedFor
          Value: ARC319
      TargetType: instance
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: SrcStack/WebTier/LB/SrcStack--WebTier-Listener/TargetGroup/Resource
  DataTierMyDatabaseSubnets53954C5F:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets for MyDatabase database
      SubnetIds:
        - Ref: VPCPublicSubnet1SubnetB4246D30
        - Ref: VPCPublicSubnet2Subnet74179F39
      Tags:
        - Key: CreatedFor
          Value: ARC319
    Metadata:
      aws:cdk:path: SrcStack/DataTier/MyDatabase/Subnets
  DataTierMyDatabaseSecurityGroup5D18A141:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS security group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      Tags:
        - Key: CreatedFor
          Value: ARC319
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: SrcStack/DataTier/MyDatabase/SecurityGroup/Resource
  DataTierMyDatabaseSecret7787887F:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        ExcludeCharacters: '"@/\'
        GenerateStringKey: password
        PasswordLength: 30
        SecretStringTemplate: '{"username":"master"}'
      Tags:
        - Key: CreatedFor
          Value: ARC319
    Metadata:
      aws:cdk:path: SrcStack/DataTier/MyDatabase/Secret/Resource
  DataTierMyDatabaseSecretAttachedSecret1B350251:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId:
        Ref: DataTierMyDatabaseSecret7787887F
      TargetId:
        Ref: DataTierMyDatabase80E75675
      TargetType: AWS::RDS::DBCluster
    Metadata:
      aws:cdk:path: SrcStack/DataTier/MyDatabase/Secret/AttachedSecret/Resource
  DataTierMyDatabase80E75675:
    Type: AWS::RDS::DBCluster
    Properties:
      Engine: aurora-postgresql
      DatabaseName: main
      DBClusterParameterGroupName: default.aurora-postgresql10
      DBSubnetGroupName:
        Ref: DataTierMyDatabaseSubnets53954C5F
      EngineVersion: "10.7"
      MasterUsername:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DataTierMyDatabaseSecret7787887F
            - :SecretString:username::}}
      MasterUserPassword:
        Fn::Join:
          - ""
          - - "{{resolve:secretsmanager:"
            - Ref: DataTierMyDatabaseSecret7787887F
            - :SecretString:password::}}
      StorageEncrypted: false
      Tags:
        - Key: CreatedFor
          Value: ARC319
      VpcSecurityGroupIds:
        - Fn::GetAtt:
            - DataTierMyDatabaseSecurityGroup5D18A141
            - GroupId
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SrcStack/DataTier/MyDatabase/Resource
  DataTierMyDatabaseInstance13E793B81:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.r5.large
      DBClusterIdentifier:
        Ref: DataTierMyDatabase80E75675
      DBSubnetGroupName:
        Ref: DataTierMyDatabaseSubnets53954C5F
      Engine: aurora-postgresql
      EngineVersion: "10.7"
      PubliclyAccessible: true
      Tags:
        - Key: CreatedFor
          Value: ARC319
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SrcStack/DataTier/MyDatabase/Instance1
  DataTierMyDatabaseInstance2B8EF3B40:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: db.r5.large
      DBClusterIdentifier:
        Ref: DataTierMyDatabase80E75675
      DBSubnetGroupName:
        Ref: DataTierMyDatabaseSubnets53954C5F
      Engine: aurora-postgresql
      EngineVersion: "10.7"
      PubliclyAccessible: true
      Tags:
        - Key: CreatedFor
          Value: ARC319
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet2DefaultRouteB7481BBA
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: SrcStack/DataTier/MyDatabase/Instance2
  DataTieropenDbSgBACC4BF0:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: My Db is open to the world
      GroupName: sgDbOpenToTheWorld
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: from 0.0.0.0/0:ALL TRAFFIC
          IpProtocol: "-1"
        - CidrIpv6: ::0/0
          Description: from ::0/0:ALL TRAFFIC
          IpProtocol: "-1"
      Tags:
        - Key: CreatedFor
          Value: ARC319
      VpcId:
        Ref: VPCB9E5F0B4
    Metadata:
      aws:cdk:path: SrcStack/DataTier/openDbSg/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.3.0,@aws-cdk/assets=1.5.0,@aws-cdk/aws-autoscaling=1.5.0,@aws-cdk/aws-autoscaling-common=1.5.0,@aws-cdk/aws-cloudwatch=1.5.0,@aws-cdk/aws-ec2=1.5.0,@aws-cdk/aws-elasticloadbalancingv2=1.5.0,@aws-cdk/aws-events=1.5.0,@aws-cdk/aws-iam=1.5.0,@aws-cdk/aws-kms=1.5.0,@aws-cdk/aws-lambda=1.5.0,@aws-cdk/aws-rds=1.5.0,@aws-cdk/aws-s3=1.5.0,@aws-cdk/aws-s3-assets=1.5.0,@aws-cdk/aws-sam=1.5.0,@aws-cdk/aws-secretsmanager=1.5.0,@aws-cdk/aws-sqs=1.5.0,@aws-cdk/aws-ssm=1.5.0,@aws-cdk/core=1.5.0,@aws-cdk/cx-api=1.5.0,@aws-cdk/region-info=1.5.0,jsii-runtime=node.js/v10.5.0
Parameters:
  SsmParameterValueawsserviceamiamazonlinuxlatestamznamihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /aws/service/ami-amazon-linux-latest/amzn-ami-hvm-x86_64-gp2

